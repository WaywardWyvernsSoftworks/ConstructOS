{"version":3,"file":"index.js","sources":["../../electron/main/update.ts","../../electron/main/api/discord.ts","../../electron/main/api/pouchdb.ts","../../electron/main/api/fsapi.ts","../../electron/main/index.ts"],"sourcesContent":["import { app, ipcMain } from 'electron'\r\nimport {\r\n  type ProgressInfo,\r\n  type UpdateDownloadedEvent,\r\n  autoUpdater\r\n} from 'electron-updater'\r\n\r\nexport function update(win: Electron.BrowserWindow) {\r\n\r\n  // When set to false, the update download will be triggered through the API\r\n  autoUpdater.autoDownload = false\r\n  autoUpdater.disableWebInstaller = false\r\n  autoUpdater.allowDowngrade = false\r\n\r\n  // start check\r\n  autoUpdater.on('checking-for-update', function () { })\r\n  // update available\r\n  autoUpdater.on('update-available', (arg) => {\r\n    win.webContents.send('update-can-available', { update: true, version: app.getVersion(), newVersion: arg?.version })\r\n  })\r\n  // update not available\r\n  autoUpdater.on('update-not-available', (arg) => {\r\n    win.webContents.send('update-can-available', { update: false, version: app.getVersion(), newVersion: arg?.version })\r\n  })\r\n\r\n  // Checking for updates\r\n  ipcMain.handle('check-update', async () => {\r\n    if (!app.isPackaged) {\r\n      const error = new Error('The update feature is only available after the package.')\r\n      return { message: error.message, error }\r\n    }\r\n\r\n    try {\r\n      return await autoUpdater.checkForUpdatesAndNotify()\r\n    } catch (error) {\r\n      return { message: 'Network error', error }\r\n    }\r\n  })\r\n\r\n  // Start downloading and feedback on progress\r\n  ipcMain.handle('start-download', (event) => {\r\n    startDownload(\r\n      (error, progressInfo) => {\r\n        if (error) {\r\n          // feedback download error message\r\n          event.sender.send('update-error', { message: error.message, error })\r\n        } else {\r\n          // feedback update progress message\r\n          event.sender.send('download-progress', progressInfo)\r\n        }\r\n      },\r\n      () => {\r\n        // feedback update downloaded message\r\n        event.sender.send('update-downloaded')\r\n      }\r\n    )\r\n  })\r\n\r\n  // Install now\r\n  ipcMain.handle('quit-and-install', () => {\r\n    autoUpdater.quitAndInstall(false, true)\r\n  })\r\n}\r\n\r\nfunction startDownload(\r\n  callback: (error: Error | null, info: ProgressInfo | null) => void,\r\n  complete: (event: UpdateDownloadedEvent) => void,\r\n) {\r\n  autoUpdater.on('download-progress', info => callback(null, info))\r\n  autoUpdater.on('error', error => callback(error, null))\r\n  autoUpdater.on('update-downloaded', complete)\r\n  autoUpdater.downloadUpdate()\r\n}\r\n","import { ipcMain } from 'electron';\r\nimport { ActivityType, Client, GatewayIntentBits, Collection, REST, Routes, Partials, TextChannel, DMChannel, NewsChannel, Snowflake, Webhook } from 'discord.js';\r\n\r\nconst intents = { \r\n    intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, \r\n    GatewayIntentBits.MessageContent, GatewayIntentBits.GuildEmojisAndStickers, \r\n    GatewayIntentBits.DirectMessages, GatewayIntentBits.DirectMessageReactions,\r\n    GatewayIntentBits.GuildMessageTyping, GatewayIntentBits.GuildModeration], \r\n    partials: [Partials.Channel, Partials.GuildMember, Partials.User, Partials.Reaction, Partials.Message] \r\n};\r\ntype ValidStatus = 'online' | 'dnd' | 'idle' | 'invisible';\r\n\r\nfunction cleanUsername(username: string) {\r\n    // Remove leading characters\r\n    let cleaned = username.replace(/^[._-]+/, '');\r\n  \r\n    // Remove trailing characters\r\n    cleaned = cleaned.replace(/[._-]+$/, '');\r\n  \r\n    return cleaned;\r\n}\r\n\r\nfunction cleanEmoji(text: string) {\r\n    // Remove emoji characters using regex\r\n    return text.replace(/<:[a-zA-Z0-9_]+:[0-9]+>/g, '');\r\n}\r\n\r\nexport function DiscordJSRoutes(){\r\n    const disClient = new Client(intents);\r\n    const commands = new Collection();\r\n    let isReady = false;\r\n\r\n    disClient.on('messageCreate', async (message) => {\r\n        if (message.author.bot) return;\r\n    });\r\n\r\n    disClient.on('ready', () => {\r\n        if(!disClient.user) return;\r\n        if(disClient.user){\r\n            disClient.user.setActivity({ name: 'with your feelings', type: ActivityType.Playing });\r\n        }\r\n        isReady = true;\r\n        console.log(`Logged in as ${disClient.user.tag}!`);\r\n    });\r\n\r\n    async function setDiscordBotInfo(botName: string, base64Avatar: string): Promise<void> {\r\n        if(!isReady) return;\r\n        if (!disClient.user) {\r\n            console.error(\"Discord client user is not initialized.\");\r\n            return;\r\n        }\r\n        let newName;\r\n        let newNameDot;\r\n        try {\r\n            await disClient.user.setUsername(botName);\r\n            console.log(`My new username is ${botName}`);\r\n        } catch (error) {\r\n            console.error(`Failed to set username to ${botName}:`, error);\r\n\r\n            // If the first attempt fails, add an underscore and try again\r\n            try {\r\n                newName = \"_\" + botName;\r\n                await disClient.user.setUsername(newName);\r\n                console.log(`My new username is ${newName}`);\r\n            } catch (error) {\r\n                console.error(`Failed to set username to ${newName}:`, error);\r\n    \r\n                // If the second attempt fails, add a dot and try again\r\n                try {\r\n                    newNameDot = \".\" + botName;\r\n                    await disClient.user.setUsername(newNameDot);\r\n                    console.log(`My new username is ${newNameDot}`);\r\n                } catch (error) {\r\n                    console.error(`Failed to set username to ${newNameDot}:`, error);\r\n                }\r\n            }\r\n        }\r\n    \r\n        // Change bot's avatar\r\n        try {\r\n            const buffer = Buffer.from(base64Avatar, 'base64');\r\n            await disClient.user.setAvatar(buffer);\r\n            console.log('New avatar set!');\r\n        } catch (error) {\r\n            console.error('Failed to set avatar:', error);\r\n        }\r\n    }\r\n\r\n    async function setStatus(message: string, type: string){\r\n        if(!disClient.user) return;\r\n        if(!isReady) return;\r\n    \r\n        let activityType: ActivityType.Playing | ActivityType.Streaming | ActivityType.Listening | ActivityType.Watching | ActivityType.Competing;\r\n    \r\n        switch (type) {\r\n            case 'Playing':\r\n                activityType = ActivityType.Playing;\r\n                break;\r\n            case 'Watching':\r\n                activityType = ActivityType.Watching;\r\n                break;\r\n            case 'Listening':\r\n                activityType = ActivityType.Listening;\r\n                break;\r\n            case 'Streaming':\r\n                activityType = ActivityType.Streaming;\r\n                break;\r\n            case 'Competing':\r\n                activityType = ActivityType.Competing;\r\n                break;\r\n            default:\r\n                activityType = ActivityType.Playing;\r\n                break;\r\n        }\r\n    \r\n        disClient.user.setActivity(`${message}`, {type: activityType});\r\n    }\r\n\r\n    async function setOnlineMode(type: ValidStatus) {\r\n        if(!disClient.user) return;\r\n        if(!isReady) return;\r\n        disClient.user.setStatus(type);\r\n    }\r\n    \r\n    async function sendMessage(channelID: Snowflake, message: string): Promise<void> {\r\n        if(!isReady) return;\r\n        if (!disClient.user) {\r\n            console.error(\"Discord client user is not initialized.\");\r\n            return;\r\n        }\r\n        const channel = await disClient.channels.fetch(channelID);\r\n    \r\n        // Check if the channel is one of the types that can send messages\r\n        if (channel instanceof TextChannel || channel instanceof DMChannel || channel instanceof NewsChannel) {\r\n            channel.send(message);\r\n        }\r\n    }\r\n\r\n    async function getWebhookForCharacter(charName: string, channelID: Snowflake): Promise<Webhook | undefined> {\r\n        if(!isReady) return;\r\n        const channel = disClient.channels.cache.get(channelID);\r\n    \r\n        if (!(channel instanceof TextChannel || channel instanceof NewsChannel)) {\r\n            return undefined;\r\n        }\r\n    \r\n        const webhooks = await channel.fetchWebhooks();\r\n        return webhooks.find(webhook => webhook.name === charName);\r\n    }\r\n    \r\n    async function sendMessageAsCharacter(charName: string, channelID: Snowflake, message: string): Promise<void> {\r\n        if(!isReady) return;\r\n        const webhook = await getWebhookForCharacter(charName, channelID);\r\n        \r\n        if (!webhook) {\r\n            throw new Error(`Webhook for character ${charName} not found.`);\r\n        }\r\n    \r\n        await webhook.send(message);\r\n    }\r\n    \r\n    async function getWebhooksForChannel(channelID: Snowflake): Promise<string[]> {\r\n        if(!isReady) return [];\r\n        const channel = disClient.channels.cache.get(channelID);\r\n    \r\n        if (!(channel instanceof TextChannel || channel instanceof NewsChannel)) {\r\n            return [];\r\n        }\r\n    \r\n        const webhooks = await channel.fetchWebhooks();\r\n        return webhooks.map(webhook => webhook.name);\r\n    }\r\n\r\n    ipcMain.handle('discord-login', async (event, token: string) => {\r\n        await disClient.login(token);\r\n        return true;\r\n    });\r\n\r\n    ipcMain.handle('discord-logout', async (event) => {\r\n        await disClient.destroy();\r\n        return true;\r\n    });\r\n\r\n    ipcMain.handle('discord-set-bot-info', async (event, botName: string, base64Avatar: string) => {\r\n        if(!isReady) return false;\r\n        await setDiscordBotInfo(botName, base64Avatar);\r\n        return true;\r\n    });\r\n\r\n    ipcMain.handle('discord-set-status', async (event, message: string, type: string) => {\r\n        if(!isReady) return false;\r\n        await setStatus(message, type);\r\n        return true;\r\n    });\r\n\r\n    ipcMain.handle('discord-set-online-mode', async (event, type: ValidStatus) => {\r\n        if(!isReady) return false;\r\n        await setOnlineMode(type);\r\n        return true;\r\n    });\r\n\r\n    ipcMain.handle('discord-send-message', async (event, channelID: Snowflake, message: string) => {\r\n        if(!isReady) return false;\r\n        await sendMessage(channelID, message);\r\n        return true;\r\n    });\r\n\r\n    ipcMain.handle('discord-send-message-as-character', async (event, charName: string, channelID: Snowflake, message: string) => {\r\n        if(!isReady) return false;\r\n        await sendMessageAsCharacter(charName, channelID, message);\r\n        return true;\r\n    });\r\n\r\n    ipcMain.on('discord-get-webhooks-for-channel', async (event, channelID: Snowflake) => {\r\n        if(!isReady) return false;\r\n        const webhooks = await getWebhooksForChannel(channelID);\r\n        event.sender.send('discord-get-webhooks-for-channel-reply', webhooks);\r\n    });\r\n\r\n    ipcMain.on('discord-get-webhook-for-character', async (event, charName: string, channelID: Snowflake) => {\r\n        if(!isReady) return false;\r\n        const webhook = await getWebhookForCharacter(charName, channelID);\r\n        event.sender.send('discord-get-webhook-for-character-reply', webhook);\r\n    });\r\n\r\n    ipcMain.on('discord-get-user', async (event) => {\r\n        if(!isReady) return false;\r\n        if (!disClient.user) {\r\n            console.error(\"Discord client user is not initialized.\");\r\n            return false;\r\n        }\r\n        event.sender.send('discord-get-user-reply', disClient.user);\r\n    });\r\n\r\n    ipcMain.on('discord-get-user-id', async (event) => {\r\n        if(!isReady) return false;\r\n        if (!disClient.user) {\r\n            console.error(\"Discord client user is not initialized.\");\r\n            return false;\r\n        }\r\n        event.sender.send('discord-get-user-id-reply', disClient.user.id);\r\n    });\r\n\r\n    ipcMain.on('discord-get-user-username', async (event) => {\r\n        if(!isReady) return false;\r\n        if (!disClient.user) {\r\n            console.error(\"Discord client user is not initialized.\");\r\n            return false;\r\n        }\r\n        event.sender.send('discord-get-user-username-reply', disClient.user.username);\r\n    });\r\n\r\n    ipcMain.on('discord-get-user-avatar', async (event) => {\r\n        if(!isReady) return false;\r\n        if (!disClient.user) {\r\n            console.error(\"Discord client user is not initialized.\");\r\n            return false;\r\n        }\r\n        event.sender.send('discord-get-user-avatar-reply', disClient.user.avatarURL());\r\n    });\r\n\r\n    ipcMain.on('discord-get-user-discriminator', async (event) => {\r\n        if(!isReady) return false;\r\n        if (!disClient.user) {\r\n            console.error(\"Discord client user is not initialized.\");\r\n            return false;\r\n        }\r\n        event.sender.send('discord-get-user-discriminator-reply', disClient.user.discriminator);\r\n    });\r\n\r\n    ipcMain.on('discord-get-user-tag', async (event) => {\r\n        if(!isReady) return false;\r\n        if (!disClient.user) {\r\n            console.error(\"Discord client user is not initialized.\");\r\n            return false;\r\n        }\r\n        event.sender.send('discord-get-user-tag-reply', disClient.user.tag);\r\n    });\r\n\r\n    ipcMain.on('discord-get-user-createdAt', async (event) => {\r\n        if(!isReady) return false;\r\n        if (!disClient.user) {\r\n            console.error(\"Discord client user is not initialized.\");\r\n            return false;\r\n        }\r\n        event.sender.send('discord-get-user-createdAt-reply', disClient.user.createdAt);\r\n    });\r\n\r\n    ipcMain.on('discord-bot-status', async (event) => {\r\n        event.sender.send('discord-bot-status-reply', isReady);\r\n    });\r\n};","import { ipcMain } from 'electron';\r\nimport PouchDB from 'pouchdb';\r\nimport { dataPath } from '../';\r\n\r\nexport function PouchDBRoutes(){\r\n    let agentDB = new PouchDB('agents', {prefix: dataPath});\r\n    let chatsDB = new PouchDB('chats', {prefix: dataPath});\r\n    let commandDB = new PouchDB('commands', {prefix: dataPath});\r\n    let attachmentDB = new PouchDB('attachments', {prefix: dataPath});\r\n\r\n\r\n    ipcMain.on('get-agents', (event, arg) => {\r\n        agentDB.allDocs({include_docs: true}).then((result) => {\r\n            event.sender.send('get-agents-reply', result.rows);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('get-agent', (event, arg) => {\r\n        agentDB.get(arg).then((result) => {\r\n            event.sender.send('get-agent-reply', result);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('add-agent', (event, arg) => {\r\n        agentDB.put(arg).then((result) => {\r\n            event.sender.send('add-agent-reply', result);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('update-agent', (event, arg) => {\r\n        agentDB.get(arg._id).then((doc) => {\r\n            // Merge existing fields with updated fields and retain _rev\r\n            let updatedDoc = {...doc, ...arg};\r\n\r\n            agentDB.put(updatedDoc).then((result) => {\r\n                event.sender.send('update-agent-reply', result);\r\n            }).catch((err) => {\r\n                console.error('Error while updating document: ', err);\r\n            });\r\n        }).catch((err) => {\r\n            console.error('Error while getting document: ', err);\r\n        }); \r\n    });\r\n\r\n    ipcMain.on('delete-agent', (event, arg) => {\r\n        agentDB.get(arg).then((doc) => {\r\n            agentDB.remove(doc).then((result) => {\r\n                event.sender.send('delete-agent-reply', result);\r\n            }).catch((err) => {\r\n                console.error('Error while deleting document: ', err);\r\n            });\r\n        }).catch((err) => {\r\n            console.error('Error while getting document: ', err);\r\n        }); \r\n    });\r\n\r\n    ipcMain.on('get-chats', (event, arg) => {\r\n        chatsDB.allDocs({include_docs: true}).then((result) => {\r\n            event.sender.send('get-chats-reply', result.rows);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('get-chat', (event, arg) => {\r\n        chatsDB.get(arg).then((result) => {\r\n            event.sender.send('get-chat-reply', result);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('add-chat', (event, arg) => {\r\n        chatsDB.put(arg).then((result) => {\r\n            event.sender.send('add-chat-reply', result);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('update-chat', (event, arg) => {\r\n        chatsDB.get(arg._id).then((doc) => {\r\n            // Merge existing fields with updated fields and retain _rev\r\n            let updatedDoc = {...doc, ...arg};\r\n            \r\n            chatsDB.put(updatedDoc).then((result) => {\r\n                event.sender.send('update-chat-reply', result);\r\n            }).catch((err) => {\r\n                console.error('Error while updating document: ', err);\r\n            });\r\n        }).catch((err) => {\r\n            console.error('Error while getting document: ', err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('delete-chat', (event, arg) => {\r\n        chatsDB.get(arg).then((doc) => {\r\n            chatsDB.remove(doc).then((result) => {\r\n                event.sender.send('delete-chat-reply', result);\r\n            }).catch((err) => {\r\n                console.error('Error while deleting document: ', err);\r\n            });\r\n        }).catch((err) => {\r\n            console.error('Error while getting document: ', err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('get-commands', (event, arg) => {\r\n        commandDB.allDocs({include_docs: true}).then((result) => {\r\n            event.sender.send('get-commands-reply', result.rows);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('get-command', (event, arg) => {\r\n        commandDB.get(arg).then((result) => {\r\n            event.sender.send('get-command-reply', result);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('add-command', (event, arg) => {\r\n        commandDB.put(arg).then((result) => {\r\n            event.sender.send('add-command-reply', result);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('update-command', (event, arg) => {\r\n        commandDB.get(arg._id).then((doc) => {\r\n            // Merge existing fields with updated fields and retain _rev\r\n            let updatedDoc = {...doc, ...arg};\r\n\r\n            commandDB.put(updatedDoc).then((result) => {\r\n                event.sender.send('update-command-reply', result);\r\n            }).catch((err) => {\r\n                console.error('Error while updating document: ', err);\r\n            });\r\n        }).catch((err) => {\r\n            console.error('Error while getting document: ', err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('delete-command', (event, arg) => {\r\n        commandDB.get(arg).then((doc) => {\r\n            commandDB.remove(doc).then((result) => {\r\n                event.sender.send('delete-command-reply', result);\r\n            }).catch((err) => {\r\n                console.error('Error while deleting document: ', err);\r\n            });\r\n        }).catch((err) => {\r\n            console.error('Error while getting document: ', err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('get-attachments', (event, arg) => {\r\n        attachmentDB.allDocs({include_docs: true}).then((result) => {\r\n            event.sender.send('get-attachments-reply', result.rows);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('get-attachment', (event, arg) => {\r\n        attachmentDB.get(arg).then((result) => {\r\n            event.sender.send('get-attachment-reply', result);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('add-attachment', (event, arg) => {\r\n        attachmentDB.put(arg).then((result) => {\r\n            event.sender.send('add-attachment-reply', result);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('update-attachment', (event, arg) => {\r\n        attachmentDB.get(arg._id).then((doc) => {\r\n            // Merge existing fields with updated fields and retain _rev\r\n            let updatedDoc = {...doc, ...arg};\r\n\r\n            attachmentDB.put(updatedDoc).then((result) => {\r\n                event.sender.send('update-attachment-reply', result);\r\n            }).catch((err) => {\r\n                console.error('Error while updating document: ', err);\r\n            });\r\n        }).catch((err) => {\r\n            console.error('Error while getting document: ', err);\r\n        });\r\n    });\r\n\r\n    ipcMain.on('delete-attachment', (event, arg) => {\r\n        attachmentDB.get(arg).then((doc) => {\r\n            attachmentDB.remove(doc).then((result) => {\r\n                event.sender.send('delete-attachment-reply', result);\r\n            }).catch((err) => {\r\n                console.error('Error while deleting document: ', err);\r\n            });\r\n        }).catch((err) => {\r\n            console.error('Error while getting document: ', err);\r\n        });\r\n    });\r\n\r\n\r\n    ipcMain.on('clear-data', (event, arg) => {\r\n        agentDB.destroy();\r\n        chatsDB.destroy();\r\n        commandDB.destroy();\r\n        attachmentDB.destroy();\r\n        createDBs();\r\n    });\r\n\r\n    function createDBs (){\r\n        agentDB = new PouchDB('agents', {prefix: dataPath});\r\n        chatsDB = new PouchDB('chats', {prefix: dataPath});\r\n        commandDB = new PouchDB('commands', {prefix: dataPath});\r\n        attachmentDB = new PouchDB('attachments', {prefix: dataPath});\r\n    }\r\n\r\n    return {\r\n        agentDB,\r\n        chatsDB,\r\n        commandDB,\r\n        attachmentDB,\r\n    }\r\n};","import { ipcMain } from 'electron';\r\nimport fs from 'fs';\r\n\r\nexport function FsAPIRoutes() {\r\n    // Read a file asynchronously\r\n    ipcMain.handle('read-file', async (event, filePath: string) => {\r\n        try {\r\n            const data = await fs.promises.readFile(filePath, 'utf8');\r\n            return data;\r\n        } catch (err) {\r\n            console.error(`Error reading file at ${filePath}:`, err);\r\n            throw err;\r\n        }\r\n    });\r\n\r\n    // Write to a file asynchronously\r\n    ipcMain.handle('write-file', async (event, filePath: string, data: string) => {\r\n        try {\r\n            await fs.promises.writeFile(filePath, data, 'utf8');\r\n            return { success: true };\r\n        } catch (err) {\r\n            console.error(`Error writing to file at ${filePath}:`, err);\r\n            throw err;\r\n        }\r\n    });\r\n\r\n    // Create a directory asynchronously\r\n    ipcMain.handle('mkdir', async (event, dirPath: string) => {\r\n        try {\r\n            await fs.promises.mkdir(dirPath, { recursive: true }); // Recursive to ensure parent directories are created\r\n            return { success: true };\r\n        } catch (err) {\r\n            console.error(`Error creating directory at ${dirPath}:`, err);\r\n            throw err;\r\n        }\r\n    });\r\n\r\n    // Read the contents of a directory asynchronously\r\n    ipcMain.handle('readdir', async (event, dirPath: string) => {\r\n        try {\r\n            const files = await fs.promises.readdir(dirPath);\r\n            return files;\r\n        } catch (err) {\r\n            console.error(`Error reading directory at ${dirPath}:`, err);\r\n            throw err;\r\n        }\r\n    });\r\n\r\n    // Rename a file or directory\r\n    ipcMain.handle('rename', async (event, oldPath: string, newPath: string) => {\r\n        try {\r\n            await fs.promises.rename(oldPath, newPath);\r\n            return { success: true };\r\n        } catch (err) {\r\n            console.error(`Error renaming from ${oldPath} to ${newPath}:`, err);\r\n            throw err;\r\n        }\r\n    });\r\n\r\n    // Remove a file\r\n    ipcMain.handle('unlink', async (event, filePath: string) => {\r\n        try {\r\n            await fs.promises.unlink(filePath);\r\n            return { success: true };\r\n        } catch (err) {\r\n            console.error(`Error removing file at ${filePath}:`, err);\r\n            throw err;\r\n        }\r\n    });\r\n\r\n    // Check if a file or directory exists\r\n    ipcMain.handle('exists', (event, path: string) => {\r\n        return fs.existsSync(path);  // Using synchronous version directly as it's a simple check\r\n    });\r\n\r\n    // Get information about a file or directory\r\n    ipcMain.handle('stat', async (event, filePath: string) => {\r\n        try {\r\n            const stats = await fs.promises.stat(filePath);\r\n            return stats;\r\n        } catch (err) {\r\n            console.error(`Error getting stats for file at ${filePath}:`, err);\r\n            throw err;\r\n        }\r\n    });\r\n\r\n    // Copy a file\r\n    ipcMain.handle('copy-file', async (event, src: string, dest: string, flags?: number) => {\r\n        try {\r\n            await fs.promises.copyFile(src, dest, flags);\r\n            return { success: true };\r\n        } catch (err) {\r\n            console.error(`Error copying file from ${src} to ${dest}:`, err);\r\n            throw err;\r\n        }\r\n    });\r\n\r\n    // Open a file\r\n    ipcMain.handle('open-file', async (event, path: string, flags: string, mode?: number) => {\r\n        try {\r\n        const fd = await fs.promises.open(path, flags, mode);\r\n        return fd.fd;  // Return the file descriptor number\r\n        } catch (err) {\r\n        console.error(`Error opening file at ${path}:`, err);\r\n        throw err;\r\n        }\r\n    });\r\n}","import { app, BrowserWindow, shell, ipcMain } from 'electron'\r\nimport { release } from 'node:os'\r\nimport { join } from 'node:path'\r\nimport path from 'path';\r\nimport { update } from './update'\r\nimport { DiscordJSRoutes } from './api/discord'\r\nimport { PouchDBRoutes } from './api/pouchdb'\r\nimport Store from 'electron-store';\r\nimport { FsAPIRoutes } from './api/fsapi';\r\n\r\n// The built directory structure\r\n//\r\n// ├─┬ dist-electron\r\n// │ ├─┬ main\r\n// │ │ └── index.js    > Electron-Main\r\n// │ └─┬ preload\r\n// │   └── index.js    > Preload-Scripts\r\n// ├─┬ dist\r\n// │ └── index.html    > Electron-Renderer\r\n//\r\nprocess.env.DIST_ELECTRON = join(__dirname, '../')\r\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist')\r\nprocess.env.VITE_PUBLIC = process.env.VITE_DEV_SERVER_URL\r\n  ? join(process.env.DIST_ELECTRON, '../public')\r\n  : process.env.DIST\r\n\r\n// Disable GPU Acceleration for Windows 7\r\nif (release().startsWith('6.1')) app.disableHardwareAcceleration()\r\n\r\n// Set application name for Windows 10+ notifications\r\nif (process.platform === 'win32') app.setAppUserModelId(app.getName())\r\n\r\nif (!app.requestSingleInstanceLock()) {\r\n  app.quit()\r\n  process.exit(0)\r\n}\r\n\r\n// Remove electron security warnings\r\n// This warning only shows in development mode\r\n// Read more on https://www.electronjs.org/docs/latest/tutorial/security\r\nprocess.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\r\n\r\nlet win: BrowserWindow | null = null\r\n// Here, you can also use other preload\r\nconst preload = join(__dirname, '../preload/index.js')\r\nconst url = process.env.VITE_DEV_SERVER_URL\r\nconst indexHtml = join(process.env.DIST, 'index.html')\r\nexport const dataPath = path.join(app.getPath('userData'), 'data/');\r\nexport const store = new Store();\r\nasync function createWindow() {\r\n  win = new BrowserWindow({\r\n    title: 'Main window',\r\n    icon: join(process.env.VITE_PUBLIC, 'favicon.ico'),\r\n    webPreferences: {\r\n      preload,\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n      webSecurity: false,\r\n    },\r\n    fullscreenable: true,\r\n    frame: true,\r\n    transparent: false,\r\n    autoHideMenuBar: true,\r\n    resizable: true,\r\n    maximizable: true,\r\n    minimizable: false,\r\n  })\r\n\r\n  if (url) { // electron-vite-vue#298\r\n    win.loadURL(url)\r\n    // Open devTool if the app is not packaged\r\n    win.webContents.openDevTools()\r\n  } else {\r\n    win.loadFile(indexHtml)\r\n  }\r\n\r\n  // Test actively push message to the Electron-Renderer\r\n  win.webContents.on('did-finish-load', () => {\r\n    win?.webContents.send('main-process-message', new Date().toLocaleString())\r\n  })\r\n\r\n  // Make all links open with the browser, not with the application\r\n  win.webContents.setWindowOpenHandler(({ url }) => {\r\n    if (url.startsWith('https:')) shell.openExternal(url)\r\n    return { action: 'deny' }\r\n  })\r\n\r\n  // Apply electron-updater\r\n  update(win)\r\n}\r\n\r\napp.whenReady().then(createWindow)\r\n\r\napp.on('window-all-closed', () => {\r\n  win = null\r\n  if (process.platform !== 'darwin') app.quit()\r\n})\r\n\r\napp.on('second-instance', () => {\r\n  if (win) {\r\n    // Focus on the main window if the user tried to open another\r\n    if (win.isMinimized()) win.restore()\r\n    win.focus()\r\n  }\r\n})\r\n\r\napp.on('activate', () => {\r\n  const allWindows = BrowserWindow.getAllWindows()\r\n  if (allWindows.length) {\r\n    allWindows[0].focus()\r\n  } else {\r\n    createWindow()\r\n  }\r\n})\r\n\r\n// New window example arg: new windows url\r\nipcMain.handle('open-win', (_, arg) => {\r\n  const childWindow = new BrowserWindow({\r\n    webPreferences: {\r\n      preload,\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n    },\r\n  })\r\n\r\n  if (process.env.VITE_DEV_SERVER_URL) {\r\n    childWindow.loadURL(`${url}#${arg}`)\r\n  } else {\r\n    childWindow.loadFile(indexHtml, { hash: arg })\r\n  }\r\n})\r\n\r\nipcMain.handle('get-data-path', () => {\r\n  return dataPath;\r\n})\r\n\r\nipcMain.on('set-data', (event, arg) => {\r\n  store.set(arg.key, arg.value);\r\n})\r\n\r\nipcMain.on('get-data', (event, arg) => {\r\n  event.sender.send('get-data-reply', store.get(arg));\r\n})\r\n\r\nDiscordJSRoutes();\r\nPouchDBRoutes();\r\nFsAPIRoutes();"],"names":["win","autoUpdater","app","ipcMain","GatewayIntentBits","Partials","Client","Collection","ActivityType","error","TextChannel","DMChannel","NewsChannel","path","join","release","BrowserWindow","url","shell"],"mappings":";;;;;;;;;;;AAOO,SAAS,OAAOA,MAA6B;AAGlDC,kBAAA,YAAY,eAAe;AAC3BA,kBAAA,YAAY,sBAAsB;AAClCA,kBAAA,YAAY,iBAAiB;AAGjBA,8BAAA,GAAG,uBAAuB,WAAY;AAAA,EAAA,CAAG;AAEzCA,kBAAAA,YAAA,GAAG,oBAAoB,CAAC,QAAQ;AAC1C,IAAAD,KAAI,YAAY,KAAK,wBAAwB,EAAE,QAAQ,MAAM,SAASE,SAAA,IAAI,WAAW,GAAG,YAAY,2BAAK,QAAS,CAAA;AAAA,EAAA,CACnH;AAEWD,kBAAAA,YAAA,GAAG,wBAAwB,CAAC,QAAQ;AAC9C,IAAAD,KAAI,YAAY,KAAK,wBAAwB,EAAE,QAAQ,OAAO,SAASE,SAAA,IAAI,WAAW,GAAG,YAAY,2BAAK,QAAS,CAAA;AAAA,EAAA,CACpH;AAGOC,mBAAA,OAAO,gBAAgB,YAAY;AACrC,QAAA,CAACD,aAAI,YAAY;AACb,YAAA,QAAQ,IAAI,MAAM,yDAAyD;AACjF,aAAO,EAAE,SAAS,MAAM,SAAS,MAAM;AAAA,IACzC;AAEI,QAAA;AACK,aAAA,MAAMD,gBAAAA,YAAY;aAClB,OAAO;AACP,aAAA,EAAE,SAAS,iBAAiB;IACrC;AAAA,EAAA,CACD;AAGOE,WAAAA,QAAA,OAAO,kBAAkB,CAAC,UAAU;AAC1C;AAAA,MACE,CAAC,OAAO,iBAAiB;AACvB,YAAI,OAAO;AAEH,gBAAA,OAAO,KAAK,gBAAgB,EAAE,SAAS,MAAM,SAAS,OAAO;AAAA,QAAA,OAC9D;AAEC,gBAAA,OAAO,KAAK,qBAAqB,YAAY;AAAA,QACrD;AAAA,MACF;AAAA,MACA,MAAM;AAEE,cAAA,OAAO,KAAK,mBAAmB;AAAA,MACvC;AAAA,IAAA;AAAA,EACF,CACD;AAGOA,mBAAA,OAAO,oBAAoB,MAAM;AAC3BF,oBAAAA,YAAA,eAAe,OAAO,IAAI;AAAA,EAAA,CACvC;AACH;AAEA,SAAS,cACP,UACA,UACA;AACAA,8BAAY,GAAG,qBAAqB,CAAA,SAAQ,SAAS,MAAM,IAAI,CAAC;AAChEA,8BAAY,GAAG,SAAS,CAAA,UAAS,SAAS,OAAO,IAAI,CAAC;AAC1CA,kBAAAA,YAAA,GAAG,qBAAqB,QAAQ;AAC5CA,kBAAA,YAAY,eAAe;AAC7B;ACrEA,MAAM,UAAU;AAAA,EACZ,SAAS;AAAA,IAACG,WAAAA,kBAAkB;AAAA,IAAQA,WAAAA,kBAAkB;AAAA,IACtDA,WAAAA,kBAAkB;AAAA,IAAgBA,WAAAA,kBAAkB;AAAA,IACpDA,WAAAA,kBAAkB;AAAA,IAAgBA,WAAAA,kBAAkB;AAAA,IACpDA,WAAAA,kBAAkB;AAAA,IAAoBA,WAAAA,kBAAkB;AAAA,EAAe;AAAA,EACvE,UAAU,CAACC,WAAAA,SAAS,SAASA,WAAA,SAAS,aAAaA,oBAAS,MAAMA,WAAA,SAAS,UAAUA,WAAAA,SAAS,OAAO;AACzG;AAkBO,SAAS,kBAAiB;AACvB,QAAA,YAAY,IAAIC,kBAAO,OAAO;AACnB,MAAIC,sBAAW;AAChC,MAAI,UAAU;AAEJ,YAAA,GAAG,iBAAiB,OAAO,YAAY;AAC7C,QAAI,QAAQ,OAAO;AAAK;AAAA,EAAA,CAC3B;AAES,YAAA,GAAG,SAAS,MAAM;AACxB,QAAG,CAAC,UAAU;AAAM;AACpB,QAAG,UAAU,MAAK;AACJ,gBAAA,KAAK,YAAY,EAAE,MAAM,sBAAsB,MAAMC,WAAAA,aAAa,SAAS;AAAA,IACzF;AACU,cAAA;AACV,YAAQ,IAAI,gBAAgB,UAAU,KAAK,GAAG,GAAG;AAAA,EAAA,CACpD;AAEc,iBAAA,kBAAkB,SAAiB,cAAqC;AACnF,QAAG,CAAC;AAAS;AACT,QAAA,CAAC,UAAU,MAAM;AACjB,cAAQ,MAAM,yCAAyC;AACvD;AAAA,IACJ;AACI,QAAA;AACA,QAAA;AACA,QAAA;AACM,YAAA,UAAU,KAAK,YAAY,OAAO;AAChC,cAAA,IAAI,sBAAsB,OAAO,EAAE;AAAA,aACtC,OAAO;AACZ,cAAQ,MAAM,6BAA6B,OAAO,KAAK,KAAK;AAGxD,UAAA;AACA,kBAAU,MAAM;AACV,cAAA,UAAU,KAAK,YAAY,OAAO;AAChC,gBAAA,IAAI,sBAAsB,OAAO,EAAE;AAAA,eACtCC,QAAO;AACZ,gBAAQ,MAAM,6BAA6B,OAAO,KAAKA,MAAK;AAGxD,YAAA;AACA,uBAAa,MAAM;AACb,gBAAA,UAAU,KAAK,YAAY,UAAU;AACnC,kBAAA,IAAI,sBAAsB,UAAU,EAAE;AAAA,iBACzCA,QAAO;AACZ,kBAAQ,MAAM,6BAA6B,UAAU,KAAKA,MAAK;AAAA,QACnE;AAAA,MACJ;AAAA,IACJ;AAGI,QAAA;AACA,YAAM,SAAS,OAAO,KAAK,cAAc,QAAQ;AAC3C,YAAA,UAAU,KAAK,UAAU,MAAM;AACrC,cAAQ,IAAI,iBAAiB;AAAA,aACxB,OAAO;AACJ,cAAA,MAAM,yBAAyB,KAAK;AAAA,IAChD;AAAA,EACJ;AAEe,iBAAA,UAAU,SAAiB,MAAa;AACnD,QAAG,CAAC,UAAU;AAAM;AACpB,QAAG,CAAC;AAAS;AAET,QAAA;AAEJ,YAAQ,MAAM;AAAA,MACV,KAAK;AACD,uBAAeD,WAAa,aAAA;AAC5B;AAAA,MACJ,KAAK;AACD,uBAAeA,WAAa,aAAA;AAC5B;AAAA,MACJ,KAAK;AACD,uBAAeA,WAAa,aAAA;AAC5B;AAAA,MACJ,KAAK;AACD,uBAAeA,WAAa,aAAA;AAC5B;AAAA,MACJ,KAAK;AACD,uBAAeA,WAAa,aAAA;AAC5B;AAAA,MACJ;AACI,uBAAeA,WAAa,aAAA;AAC5B;AAAA,IACR;AAEU,cAAA,KAAK,YAAY,GAAG,OAAO,IAAI,EAAC,MAAM,cAAa;AAAA,EACjE;AAEA,iBAAe,cAAc,MAAmB;AAC5C,QAAG,CAAC,UAAU;AAAM;AACpB,QAAG,CAAC;AAAS;AACH,cAAA,KAAK,UAAU,IAAI;AAAA,EACjC;AAEe,iBAAA,YAAY,WAAsB,SAAgC;AAC7E,QAAG,CAAC;AAAS;AACT,QAAA,CAAC,UAAU,MAAM;AACjB,cAAQ,MAAM,yCAAyC;AACvD;AAAA,IACJ;AACA,UAAM,UAAU,MAAM,UAAU,SAAS,MAAM,SAAS;AAGxD,QAAI,mBAAmBE,WAAAA,eAAe,mBAAmBC,WAAAA,aAAa,mBAAmBC,WAAAA,aAAa;AAClG,cAAQ,KAAK,OAAO;AAAA,IACxB;AAAA,EACJ;AAEe,iBAAA,uBAAuB,UAAkB,WAAoD;AACxG,QAAG,CAAC;AAAS;AACb,UAAM,UAAU,UAAU,SAAS,MAAM,IAAI,SAAS;AAEtD,QAAI,EAAE,mBAAmBF,WAAAA,eAAe,mBAAmBE,WAAc,cAAA;AAC9D,aAAA;AAAA,IACX;AAEM,UAAA,WAAW,MAAM,QAAQ;AAC/B,WAAO,SAAS,KAAK,CAAW,YAAA,QAAQ,SAAS,QAAQ;AAAA,EAC7D;AAEe,iBAAA,uBAAuB,UAAkB,WAAsB,SAAgC;AAC1G,QAAG,CAAC;AAAS;AACb,UAAM,UAAU,MAAM,uBAAuB,UAAU,SAAS;AAEhE,QAAI,CAAC,SAAS;AACV,YAAM,IAAI,MAAM,yBAAyB,QAAQ,aAAa;AAAA,IAClE;AAEM,UAAA,QAAQ,KAAK,OAAO;AAAA,EAC9B;AAEA,iBAAe,sBAAsB,WAAyC;AAC1E,QAAG,CAAC;AAAS,aAAO;AACpB,UAAM,UAAU,UAAU,SAAS,MAAM,IAAI,SAAS;AAEtD,QAAI,EAAE,mBAAmBF,WAAAA,eAAe,mBAAmBE,WAAc,cAAA;AACrE,aAAO;IACX;AAEM,UAAA,WAAW,MAAM,QAAQ;AAC/B,WAAO,SAAS,IAAI,CAAW,YAAA,QAAQ,IAAI;AAAA,EAC/C;AAEAT,WAAAA,QAAQ,OAAO,iBAAiB,OAAO,OAAO,UAAkB;AACtD,UAAA,UAAU,MAAM,KAAK;AACpB,WAAA;AAAA,EAAA,CACV;AAEOA,WAAAA,QAAA,OAAO,kBAAkB,OAAO,UAAU;AAC9C,UAAM,UAAU;AACT,WAAA;AAAA,EAAA,CACV;AAEDA,WAAA,QAAQ,OAAO,wBAAwB,OAAO,OAAO,SAAiB,iBAAyB;AAC3F,QAAG,CAAC;AAAgB,aAAA;AACd,UAAA,kBAAkB,SAAS,YAAY;AACtC,WAAA;AAAA,EAAA,CACV;AAEDA,WAAA,QAAQ,OAAO,sBAAsB,OAAO,OAAO,SAAiB,SAAiB;AACjF,QAAG,CAAC;AAAgB,aAAA;AACd,UAAA,UAAU,SAAS,IAAI;AACtB,WAAA;AAAA,EAAA,CACV;AAEDA,WAAAA,QAAQ,OAAO,2BAA2B,OAAO,OAAO,SAAsB;AAC1E,QAAG,CAAC;AAAgB,aAAA;AACpB,UAAM,cAAc,IAAI;AACjB,WAAA;AAAA,EAAA,CACV;AAEDA,WAAA,QAAQ,OAAO,wBAAwB,OAAO,OAAO,WAAsB,YAAoB;AAC3F,QAAG,CAAC;AAAgB,aAAA;AACd,UAAA,YAAY,WAAW,OAAO;AAC7B,WAAA;AAAA,EAAA,CACV;AAEDA,WAAA,QAAQ,OAAO,qCAAqC,OAAO,OAAO,UAAkB,WAAsB,YAAoB;AAC1H,QAAG,CAAC;AAAgB,aAAA;AACd,UAAA,uBAAuB,UAAU,WAAW,OAAO;AAClD,WAAA;AAAA,EAAA,CACV;AAEDA,WAAAA,QAAQ,GAAG,oCAAoC,OAAO,OAAO,cAAyB;AAClF,QAAG,CAAC;AAAgB,aAAA;AACd,UAAA,WAAW,MAAM,sBAAsB,SAAS;AAChD,UAAA,OAAO,KAAK,0CAA0C,QAAQ;AAAA,EAAA,CACvE;AAEDA,WAAA,QAAQ,GAAG,qCAAqC,OAAO,OAAO,UAAkB,cAAyB;AACrG,QAAG,CAAC;AAAgB,aAAA;AACpB,UAAM,UAAU,MAAM,uBAAuB,UAAU,SAAS;AAC1D,UAAA,OAAO,KAAK,2CAA2C,OAAO;AAAA,EAAA,CACvE;AAEOA,WAAAA,QAAA,GAAG,oBAAoB,OAAO,UAAU;AAC5C,QAAG,CAAC;AAAgB,aAAA;AAChB,QAAA,CAAC,UAAU,MAAM;AACjB,cAAQ,MAAM,yCAAyC;AAChD,aAAA;AAAA,IACX;AACA,UAAM,OAAO,KAAK,0BAA0B,UAAU,IAAI;AAAA,EAAA,CAC7D;AAEOA,WAAAA,QAAA,GAAG,uBAAuB,OAAO,UAAU;AAC/C,QAAG,CAAC;AAAgB,aAAA;AAChB,QAAA,CAAC,UAAU,MAAM;AACjB,cAAQ,MAAM,yCAAyC;AAChD,aAAA;AAAA,IACX;AACA,UAAM,OAAO,KAAK,6BAA6B,UAAU,KAAK,EAAE;AAAA,EAAA,CACnE;AAEOA,WAAAA,QAAA,GAAG,6BAA6B,OAAO,UAAU;AACrD,QAAG,CAAC;AAAgB,aAAA;AAChB,QAAA,CAAC,UAAU,MAAM;AACjB,cAAQ,MAAM,yCAAyC;AAChD,aAAA;AAAA,IACX;AACA,UAAM,OAAO,KAAK,mCAAmC,UAAU,KAAK,QAAQ;AAAA,EAAA,CAC/E;AAEOA,WAAAA,QAAA,GAAG,2BAA2B,OAAO,UAAU;AACnD,QAAG,CAAC;AAAgB,aAAA;AAChB,QAAA,CAAC,UAAU,MAAM;AACjB,cAAQ,MAAM,yCAAyC;AAChD,aAAA;AAAA,IACX;AACA,UAAM,OAAO,KAAK,iCAAiC,UAAU,KAAK,WAAW;AAAA,EAAA,CAChF;AAEOA,WAAAA,QAAA,GAAG,kCAAkC,OAAO,UAAU;AAC1D,QAAG,CAAC;AAAgB,aAAA;AAChB,QAAA,CAAC,UAAU,MAAM;AACjB,cAAQ,MAAM,yCAAyC;AAChD,aAAA;AAAA,IACX;AACA,UAAM,OAAO,KAAK,wCAAwC,UAAU,KAAK,aAAa;AAAA,EAAA,CACzF;AAEOA,WAAAA,QAAA,GAAG,wBAAwB,OAAO,UAAU;AAChD,QAAG,CAAC;AAAgB,aAAA;AAChB,QAAA,CAAC,UAAU,MAAM;AACjB,cAAQ,MAAM,yCAAyC;AAChD,aAAA;AAAA,IACX;AACA,UAAM,OAAO,KAAK,8BAA8B,UAAU,KAAK,GAAG;AAAA,EAAA,CACrE;AAEOA,WAAAA,QAAA,GAAG,8BAA8B,OAAO,UAAU;AACtD,QAAG,CAAC;AAAgB,aAAA;AAChB,QAAA,CAAC,UAAU,MAAM;AACjB,cAAQ,MAAM,yCAAyC;AAChD,aAAA;AAAA,IACX;AACA,UAAM,OAAO,KAAK,oCAAoC,UAAU,KAAK,SAAS;AAAA,EAAA,CACjF;AAEOA,WAAAA,QAAA,GAAG,sBAAsB,OAAO,UAAU;AACxC,UAAA,OAAO,KAAK,4BAA4B,OAAO;AAAA,EAAA,CACxD;AACL;AC/RO,SAAS,gBAAe;AAC3B,MAAI,UAAU,IAAI,QAAQ,UAAU,EAAC,QAAQ,UAAS;AACtD,MAAI,UAAU,IAAI,QAAQ,SAAS,EAAC,QAAQ,UAAS;AACrD,MAAI,YAAY,IAAI,QAAQ,YAAY,EAAC,QAAQ,UAAS;AAC1D,MAAI,eAAe,IAAI,QAAQ,eAAe,EAAC,QAAQ,UAAS;AAGhEA,WAAAA,QAAQ,GAAG,cAAc,CAAC,OAAO,QAAQ;AAC7B,YAAA,QAAQ,EAAC,cAAc,KAAA,CAAK,EAAE,KAAK,CAAC,WAAW;AACnD,YAAM,OAAO,KAAK,oBAAoB,OAAO,IAAI;AAAA,IAAA,CACpD,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,aAAa,CAAC,OAAO,QAAQ;AACpC,YAAQ,IAAI,GAAG,EAAE,KAAK,CAAC,WAAW;AACxB,YAAA,OAAO,KAAK,mBAAmB,MAAM;AAAA,IAAA,CAC9C,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,aAAa,CAAC,OAAO,QAAQ;AACpC,YAAQ,IAAI,GAAG,EAAE,KAAK,CAAC,WAAW;AACxB,YAAA,OAAO,KAAK,mBAAmB,MAAM;AAAA,IAAA,CAC9C,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,gBAAgB,CAAC,OAAO,QAAQ;AACvC,YAAQ,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,QAAQ;AAE/B,UAAI,aAAa,EAAC,GAAG,KAAK,GAAG,IAAG;AAEhC,cAAQ,IAAI,UAAU,EAAE,KAAK,CAAC,WAAW;AAC/B,cAAA,OAAO,KAAK,sBAAsB,MAAM;AAAA,MAAA,CACjD,EAAE,MAAM,CAAC,QAAQ;AACN,gBAAA,MAAM,mCAAmC,GAAG;AAAA,MAAA,CACvD;AAAA,IAAA,CACJ,EAAE,MAAM,CAAC,QAAQ;AACN,cAAA,MAAM,kCAAkC,GAAG;AAAA,IAAA,CACtD;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,gBAAgB,CAAC,OAAO,QAAQ;AACvC,YAAQ,IAAI,GAAG,EAAE,KAAK,CAAC,QAAQ;AAC3B,cAAQ,OAAO,GAAG,EAAE,KAAK,CAAC,WAAW;AAC3B,cAAA,OAAO,KAAK,sBAAsB,MAAM;AAAA,MAAA,CACjD,EAAE,MAAM,CAAC,QAAQ;AACN,gBAAA,MAAM,mCAAmC,GAAG;AAAA,MAAA,CACvD;AAAA,IAAA,CACJ,EAAE,MAAM,CAAC,QAAQ;AACN,cAAA,MAAM,kCAAkC,GAAG;AAAA,IAAA,CACtD;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,aAAa,CAAC,OAAO,QAAQ;AAC5B,YAAA,QAAQ,EAAC,cAAc,KAAA,CAAK,EAAE,KAAK,CAAC,WAAW;AACnD,YAAM,OAAO,KAAK,mBAAmB,OAAO,IAAI;AAAA,IAAA,CACnD,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,YAAY,CAAC,OAAO,QAAQ;AACnC,YAAQ,IAAI,GAAG,EAAE,KAAK,CAAC,WAAW;AACxB,YAAA,OAAO,KAAK,kBAAkB,MAAM;AAAA,IAAA,CAC7C,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,YAAY,CAAC,OAAO,QAAQ;AACnC,YAAQ,IAAI,GAAG,EAAE,KAAK,CAAC,WAAW;AACxB,YAAA,OAAO,KAAK,kBAAkB,MAAM;AAAA,IAAA,CAC7C,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,eAAe,CAAC,OAAO,QAAQ;AACtC,YAAQ,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,QAAQ;AAE/B,UAAI,aAAa,EAAC,GAAG,KAAK,GAAG,IAAG;AAEhC,cAAQ,IAAI,UAAU,EAAE,KAAK,CAAC,WAAW;AAC/B,cAAA,OAAO,KAAK,qBAAqB,MAAM;AAAA,MAAA,CAChD,EAAE,MAAM,CAAC,QAAQ;AACN,gBAAA,MAAM,mCAAmC,GAAG;AAAA,MAAA,CACvD;AAAA,IAAA,CACJ,EAAE,MAAM,CAAC,QAAQ;AACN,cAAA,MAAM,kCAAkC,GAAG;AAAA,IAAA,CACtD;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,eAAe,CAAC,OAAO,QAAQ;AACtC,YAAQ,IAAI,GAAG,EAAE,KAAK,CAAC,QAAQ;AAC3B,cAAQ,OAAO,GAAG,EAAE,KAAK,CAAC,WAAW;AAC3B,cAAA,OAAO,KAAK,qBAAqB,MAAM;AAAA,MAAA,CAChD,EAAE,MAAM,CAAC,QAAQ;AACN,gBAAA,MAAM,mCAAmC,GAAG;AAAA,MAAA,CACvD;AAAA,IAAA,CACJ,EAAE,MAAM,CAAC,QAAQ;AACN,cAAA,MAAM,kCAAkC,GAAG;AAAA,IAAA,CACtD;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,gBAAgB,CAAC,OAAO,QAAQ;AAC7B,cAAA,QAAQ,EAAC,cAAc,KAAA,CAAK,EAAE,KAAK,CAAC,WAAW;AACrD,YAAM,OAAO,KAAK,sBAAsB,OAAO,IAAI;AAAA,IAAA,CACtD,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,eAAe,CAAC,OAAO,QAAQ;AACtC,cAAU,IAAI,GAAG,EAAE,KAAK,CAAC,WAAW;AAC1B,YAAA,OAAO,KAAK,qBAAqB,MAAM;AAAA,IAAA,CAChD,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,eAAe,CAAC,OAAO,QAAQ;AACtC,cAAU,IAAI,GAAG,EAAE,KAAK,CAAC,WAAW;AAC1B,YAAA,OAAO,KAAK,qBAAqB,MAAM;AAAA,IAAA,CAChD,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,kBAAkB,CAAC,OAAO,QAAQ;AACzC,cAAU,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,QAAQ;AAEjC,UAAI,aAAa,EAAC,GAAG,KAAK,GAAG,IAAG;AAEhC,gBAAU,IAAI,UAAU,EAAE,KAAK,CAAC,WAAW;AACjC,cAAA,OAAO,KAAK,wBAAwB,MAAM;AAAA,MAAA,CACnD,EAAE,MAAM,CAAC,QAAQ;AACN,gBAAA,MAAM,mCAAmC,GAAG;AAAA,MAAA,CACvD;AAAA,IAAA,CACJ,EAAE,MAAM,CAAC,QAAQ;AACN,cAAA,MAAM,kCAAkC,GAAG;AAAA,IAAA,CACtD;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,kBAAkB,CAAC,OAAO,QAAQ;AACzC,cAAU,IAAI,GAAG,EAAE,KAAK,CAAC,QAAQ;AAC7B,gBAAU,OAAO,GAAG,EAAE,KAAK,CAAC,WAAW;AAC7B,cAAA,OAAO,KAAK,wBAAwB,MAAM;AAAA,MAAA,CACnD,EAAE,MAAM,CAAC,QAAQ;AACN,gBAAA,MAAM,mCAAmC,GAAG;AAAA,MAAA,CACvD;AAAA,IAAA,CACJ,EAAE,MAAM,CAAC,QAAQ;AACN,cAAA,MAAM,kCAAkC,GAAG;AAAA,IAAA,CACtD;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,mBAAmB,CAAC,OAAO,QAAQ;AAC7B,iBAAA,QAAQ,EAAC,cAAc,KAAA,CAAK,EAAE,KAAK,CAAC,WAAW;AACxD,YAAM,OAAO,KAAK,yBAAyB,OAAO,IAAI;AAAA,IAAA,CACzD,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,kBAAkB,CAAC,OAAO,QAAQ;AACzC,iBAAa,IAAI,GAAG,EAAE,KAAK,CAAC,WAAW;AAC7B,YAAA,OAAO,KAAK,wBAAwB,MAAM;AAAA,IAAA,CACnD,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,kBAAkB,CAAC,OAAO,QAAQ;AACzC,iBAAa,IAAI,GAAG,EAAE,KAAK,CAAC,WAAW;AAC7B,YAAA,OAAO,KAAK,wBAAwB,MAAM;AAAA,IAAA,CACnD,EAAE,MAAM,CAAC,QAAQ;AACd,cAAQ,IAAI,GAAG;AAAA,IAAA,CAClB;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,qBAAqB,CAAC,OAAO,QAAQ;AAC5C,iBAAa,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,QAAQ;AAEpC,UAAI,aAAa,EAAC,GAAG,KAAK,GAAG,IAAG;AAEhC,mBAAa,IAAI,UAAU,EAAE,KAAK,CAAC,WAAW;AACpC,cAAA,OAAO,KAAK,2BAA2B,MAAM;AAAA,MAAA,CACtD,EAAE,MAAM,CAAC,QAAQ;AACN,gBAAA,MAAM,mCAAmC,GAAG;AAAA,MAAA,CACvD;AAAA,IAAA,CACJ,EAAE,MAAM,CAAC,QAAQ;AACN,cAAA,MAAM,kCAAkC,GAAG;AAAA,IAAA,CACtD;AAAA,EAAA,CACJ;AAEDA,WAAAA,QAAQ,GAAG,qBAAqB,CAAC,OAAO,QAAQ;AAC5C,iBAAa,IAAI,GAAG,EAAE,KAAK,CAAC,QAAQ;AAChC,mBAAa,OAAO,GAAG,EAAE,KAAK,CAAC,WAAW;AAChC,cAAA,OAAO,KAAK,2BAA2B,MAAM;AAAA,MAAA,CACtD,EAAE,MAAM,CAAC,QAAQ;AACN,gBAAA,MAAM,mCAAmC,GAAG;AAAA,MAAA,CACvD;AAAA,IAAA,CACJ,EAAE,MAAM,CAAC,QAAQ;AACN,cAAA,MAAM,kCAAkC,GAAG;AAAA,IAAA,CACtD;AAAA,EAAA,CACJ;AAGDA,WAAAA,QAAQ,GAAG,cAAc,CAAC,OAAO,QAAQ;AACrC,YAAQ,QAAQ;AAChB,YAAQ,QAAQ;AAChB,cAAU,QAAQ;AAClB,iBAAa,QAAQ;AACX;EAAA,CACb;AAED,WAAS,YAAY;AACjB,cAAU,IAAI,QAAQ,UAAU,EAAC,QAAQ,UAAS;AAClD,cAAU,IAAI,QAAQ,SAAS,EAAC,QAAQ,UAAS;AACjD,gBAAY,IAAI,QAAQ,YAAY,EAAC,QAAQ,UAAS;AACtD,mBAAe,IAAI,QAAQ,eAAe,EAAC,QAAQ,UAAS;AAAA,EAChE;AAEO,SAAA;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAER;AC1OO,SAAS,cAAc;AAE1BA,WAAAA,QAAQ,OAAO,aAAa,OAAO,OAAO,aAAqB;AACvD,QAAA;AACA,YAAM,OAAO,MAAM,GAAG,SAAS,SAAS,UAAU,MAAM;AACjD,aAAA;AAAA,aACF,KAAK;AACV,cAAQ,MAAM,yBAAyB,QAAQ,KAAK,GAAG;AACjD,YAAA;AAAA,IACV;AAAA,EAAA,CACH;AAGDA,WAAA,QAAQ,OAAO,cAAc,OAAO,OAAO,UAAkB,SAAiB;AACtE,QAAA;AACA,YAAM,GAAG,SAAS,UAAU,UAAU,MAAM,MAAM;AAC3C,aAAA,EAAE,SAAS;aACb,KAAK;AACV,cAAQ,MAAM,4BAA4B,QAAQ,KAAK,GAAG;AACpD,YAAA;AAAA,IACV;AAAA,EAAA,CACH;AAGDA,WAAAA,QAAQ,OAAO,SAAS,OAAO,OAAO,YAAoB;AAClD,QAAA;AACA,YAAM,GAAG,SAAS,MAAM,SAAS,EAAE,WAAW,MAAM;AAC7C,aAAA,EAAE,SAAS;aACb,KAAK;AACV,cAAQ,MAAM,+BAA+B,OAAO,KAAK,GAAG;AACtD,YAAA;AAAA,IACV;AAAA,EAAA,CACH;AAGDA,WAAAA,QAAQ,OAAO,WAAW,OAAO,OAAO,YAAoB;AACpD,QAAA;AACA,YAAM,QAAQ,MAAM,GAAG,SAAS,QAAQ,OAAO;AACxC,aAAA;AAAA,aACF,KAAK;AACV,cAAQ,MAAM,8BAA8B,OAAO,KAAK,GAAG;AACrD,YAAA;AAAA,IACV;AAAA,EAAA,CACH;AAGDA,WAAA,QAAQ,OAAO,UAAU,OAAO,OAAO,SAAiB,YAAoB;AACpE,QAAA;AACA,YAAM,GAAG,SAAS,OAAO,SAAS,OAAO;AAClC,aAAA,EAAE,SAAS;aACb,KAAK;AACV,cAAQ,MAAM,uBAAuB,OAAO,OAAO,OAAO,KAAK,GAAG;AAC5D,YAAA;AAAA,IACV;AAAA,EAAA,CACH;AAGDA,WAAAA,QAAQ,OAAO,UAAU,OAAO,OAAO,aAAqB;AACpD,QAAA;AACM,YAAA,GAAG,SAAS,OAAO,QAAQ;AAC1B,aAAA,EAAE,SAAS;aACb,KAAK;AACV,cAAQ,MAAM,0BAA0B,QAAQ,KAAK,GAAG;AAClD,YAAA;AAAA,IACV;AAAA,EAAA,CACH;AAGDA,WAAAA,QAAQ,OAAO,UAAU,CAAC,OAAOU,UAAiB;AACvC,WAAA,GAAG,WAAWA,KAAI;AAAA,EAAA,CAC5B;AAGDV,WAAAA,QAAQ,OAAO,QAAQ,OAAO,OAAO,aAAqB;AAClD,QAAA;AACA,YAAM,QAAQ,MAAM,GAAG,SAAS,KAAK,QAAQ;AACtC,aAAA;AAAA,aACF,KAAK;AACV,cAAQ,MAAM,mCAAmC,QAAQ,KAAK,GAAG;AAC3D,YAAA;AAAA,IACV;AAAA,EAAA,CACH;AAGDA,WAAA,QAAQ,OAAO,aAAa,OAAO,OAAO,KAAa,MAAc,UAAmB;AAChF,QAAA;AACA,YAAM,GAAG,SAAS,SAAS,KAAK,MAAM,KAAK;AACpC,aAAA,EAAE,SAAS;aACb,KAAK;AACV,cAAQ,MAAM,2BAA2B,GAAG,OAAO,IAAI,KAAK,GAAG;AACzD,YAAA;AAAA,IACV;AAAA,EAAA,CACH;AAGDA,WAAA,QAAQ,OAAO,aAAa,OAAO,OAAOU,OAAc,OAAe,SAAkB;AACjF,QAAA;AACJ,YAAM,KAAK,MAAM,GAAG,SAAS,KAAKA,OAAM,OAAO,IAAI;AACnD,aAAO,GAAG;AAAA,aACD,KAAK;AACd,cAAQ,MAAM,yBAAyBA,KAAI,KAAK,GAAG;AAC7C,YAAA;AAAA,IACN;AAAA,EAAA,CACH;AACL;ACvFA,QAAQ,IAAI,gBAAgBC,UAAK,KAAA,WAAW,KAAK;AACjD,QAAQ,IAAI,OAAOA,UAAA,KAAK,QAAQ,IAAI,eAAe,SAAS;AAC5D,QAAQ,IAAI,cAAc,QAAQ,IAAI,sBAClCA,UAAA,KAAK,QAAQ,IAAI,eAAe,WAAW,IAC3C,QAAQ,IAAI;AAGhB,IAAIC,gBAAU,EAAA,WAAW,KAAK;AAAGb,WAAA,IAAI,4BAA4B;AAGjE,IAAI,QAAQ,aAAa;AAAaA,WAAAA,IAAA,kBAAkBA,aAAI,QAAS,CAAA;AAErE,IAAI,CAACA,SAAAA,IAAI,6BAA6B;AACpCA,WAAA,IAAI,KAAK;AACT,UAAQ,KAAK,CAAC;AAChB;AAKA,QAAQ,IAAI,oCAAoC,IAAI;AAEpD,IAAI,MAA4B;AAEhC,MAAM,UAAUY,UAAK,KAAA,WAAW,qBAAqB;AACrD,MAAM,MAAM,QAAQ,IAAI;AACxB,MAAM,YAAYA,UAAA,KAAK,QAAQ,IAAI,MAAM,YAAY;AAC9C,MAAM,WAAW,KAAK,KAAKZ,SAAAA,IAAI,QAAQ,UAAU,GAAG,OAAO;AACrD,MAAA,QAAQ,IAAI,MAAM;AAC/B,eAAe,eAAe;AAC5B,QAAM,IAAIc,SAAAA,cAAc;AAAA,IACtB,OAAO;AAAA,IACP,MAAMF,UAAAA,KAAK,QAAQ,IAAI,aAAa,aAAa;AAAA,IACjD,gBAAgB;AAAA,MACd;AAAA,MACA,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,aAAa;AAAA,IACf;AAAA,IACA,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,aAAa;AAAA,IACb,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,aAAa;AAAA,EAAA,CACd;AAED,MAAI,KAAK;AACP,QAAI,QAAQ,GAAG;AAEf,QAAI,YAAY;EAAa,OACxB;AACL,QAAI,SAAS,SAAS;AAAA,EACxB;AAGI,MAAA,YAAY,GAAG,mBAAmB,MAAM;AAC1C,+BAAK,YAAY,KAAK,6CAA4B,KAAK,GAAE;EAAgB,CAC1E;AAGD,MAAI,YAAY,qBAAqB,CAAC,EAAE,KAAAG,WAAU;AAC5CA,QAAAA,KAAI,WAAW,QAAQ;AAAGC,qBAAM,aAAaD,IAAG;AAC7C,WAAA,EAAE,QAAQ;EAAO,CACzB;AAGD,SAAO,GAAG;AACZ;AAEAf,SAAI,IAAA,UAAY,EAAA,KAAK,YAAY;AAEjCA,SAAAA,IAAI,GAAG,qBAAqB,MAAM;AAC1B,QAAA;AACN,MAAI,QAAQ,aAAa;AAAUA,aAAA,IAAI,KAAK;AAC9C,CAAC;AAEDA,SAAAA,IAAI,GAAG,mBAAmB,MAAM;AAC9B,MAAI,KAAK;AAEP,QAAI,IAAI,YAAY;AAAG,UAAI,QAAQ;AACnC,QAAI,MAAM;AAAA,EACZ;AACF,CAAC;AAEDA,SAAAA,IAAI,GAAG,YAAY,MAAM;AACjB,QAAA,aAAac,uBAAc;AACjC,MAAI,WAAW,QAAQ;AACV,eAAA,CAAC,EAAE;EAAM,OACf;AACQ;EACf;AACF,CAAC;AAGDb,SAAA,QAAQ,OAAO,YAAY,CAAC,GAAG,QAAQ;AAC/B,QAAA,cAAc,IAAIa,uBAAc;AAAA,IACpC,gBAAgB;AAAA,MACd;AAAA,MACA,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,IACpB;AAAA,EAAA,CACD;AAEG,MAAA,QAAQ,IAAI,qBAAqB;AACnC,gBAAY,QAAQ,GAAG,GAAG,IAAI,GAAG,EAAE;AAAA,EAAA,OAC9B;AACL,gBAAY,SAAS,WAAW,EAAE,MAAM,IAAK,CAAA;AAAA,EAC/C;AACF,CAAC;AAEDb,SAAAA,QAAQ,OAAO,iBAAiB,MAAM;AAC7B,SAAA;AACT,CAAC;AAEDA,SAAA,QAAQ,GAAG,YAAY,CAAC,OAAO,QAAQ;AACrC,QAAM,IAAI,IAAI,KAAK,IAAI,KAAK;AAC9B,CAAC;AAEDA,SAAA,QAAQ,GAAG,YAAY,CAAC,OAAO,QAAQ;AACrC,QAAM,OAAO,KAAK,kBAAkB,MAAM,IAAI,GAAG,CAAC;AACpD,CAAC;AAED;AACA;AACA,YAAY;;;"}