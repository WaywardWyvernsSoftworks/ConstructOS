{"version":3,"file":"index.js","sources":["../../electron/main/update.ts","../../electron/main/discord.ts","../../electron/main/index.ts"],"sourcesContent":["import { app, ipcMain } from 'electron'\r\nimport {\r\n  type ProgressInfo,\r\n  type UpdateDownloadedEvent,\r\n  autoUpdater\r\n} from 'electron-updater'\r\n\r\nexport function update(win: Electron.BrowserWindow) {\r\n\r\n  // When set to false, the update download will be triggered through the API\r\n  autoUpdater.autoDownload = false\r\n  autoUpdater.disableWebInstaller = false\r\n  autoUpdater.allowDowngrade = false\r\n\r\n  // start check\r\n  autoUpdater.on('checking-for-update', function () { })\r\n  // update available\r\n  autoUpdater.on('update-available', (arg) => {\r\n    win.webContents.send('update-can-available', { update: true, version: app.getVersion(), newVersion: arg?.version })\r\n  })\r\n  // update not available\r\n  autoUpdater.on('update-not-available', (arg) => {\r\n    win.webContents.send('update-can-available', { update: false, version: app.getVersion(), newVersion: arg?.version })\r\n  })\r\n\r\n  // Checking for updates\r\n  ipcMain.handle('check-update', async () => {\r\n    if (!app.isPackaged) {\r\n      const error = new Error('The update feature is only available after the package.')\r\n      return { message: error.message, error }\r\n    }\r\n\r\n    try {\r\n      return await autoUpdater.checkForUpdatesAndNotify()\r\n    } catch (error) {\r\n      return { message: 'Network error', error }\r\n    }\r\n  })\r\n\r\n  // Start downloading and feedback on progress\r\n  ipcMain.handle('start-download', (event) => {\r\n    startDownload(\r\n      (error, progressInfo) => {\r\n        if (error) {\r\n          // feedback download error message\r\n          event.sender.send('update-error', { message: error.message, error })\r\n        } else {\r\n          // feedback update progress message\r\n          event.sender.send('download-progress', progressInfo)\r\n        }\r\n      },\r\n      () => {\r\n        // feedback update downloaded message\r\n        event.sender.send('update-downloaded')\r\n      }\r\n    )\r\n  })\r\n\r\n  // Install now\r\n  ipcMain.handle('quit-and-install', () => {\r\n    autoUpdater.quitAndInstall(false, true)\r\n  })\r\n}\r\n\r\nfunction startDownload(\r\n  callback: (error: Error | null, info: ProgressInfo | null) => void,\r\n  complete: (event: UpdateDownloadedEvent) => void,\r\n) {\r\n  autoUpdater.on('download-progress', info => callback(null, info))\r\n  autoUpdater.on('error', error => callback(error, null))\r\n  autoUpdater.on('update-downloaded', complete)\r\n  autoUpdater.downloadUpdate()\r\n}\r\n","import { ipcMain } from 'electron';\r\nimport { ActivityType, Client, GatewayIntentBits, Collection, REST, Routes, Partials } from 'discord.js';\r\n\r\nconst intents = { \r\n    intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, \r\n    GatewayIntentBits.MessageContent, GatewayIntentBits.GuildEmojisAndStickers, \r\n    GatewayIntentBits.DirectMessages, GatewayIntentBits.DirectMessageReactions,\r\n    GatewayIntentBits.GuildMessageTyping, GatewayIntentBits.GuildModeration], \r\n    partials: [Partials.Channel, Partials.GuildMember, Partials.User, Partials.Reaction, Partials.Message] \r\n};\r\n\r\nfunction cleanUsername(username: string) {\r\n    // Remove leading characters\r\n    let cleaned = username.replace(/^[._-]+/, '');\r\n  \r\n    // Remove trailing characters\r\n    cleaned = cleaned.replace(/[._-]+$/, '');\r\n  \r\n    return cleaned;\r\n}\r\n\r\nfunction cleanEmoji(text: string) {\r\n    // Remove emoji characters using regex\r\n    return text.replace(/<:[a-zA-Z0-9_]+:[0-9]+>/g, '');\r\n}\r\n\r\nexport function DiscordJSRoutes(){\r\n    const disClient = new Client(intents);\r\n    const commands = new Collection();\r\n\r\n    disClient.on('ready', () => {\r\n        if(!disClient.user) return;\r\n        if(disClient.user){\r\n            disClient.user.setActivity({ name: 'with your feelings', type: ActivityType.Playing });\r\n        }\r\n        console.log(`Logged in as ${disClient.user.tag}!`);\r\n    });\r\n\r\n    async function setStatus(message: string, type: string){\r\n        if(!disClient.user) return;\r\n        let activityType;\r\n        switch (type) {\r\n            case 'Playing':\r\n            activityType = ActivityType.Playing;\r\n            break;\r\n            case 'Watching':\r\n            activityType = ActivityType.Watching;\r\n            break;\r\n            case 'Listening':\r\n            activityType = ActivityType.Listening;\r\n            break;\r\n            case 'Streaming':\r\n            activityType = ActivityType.Streaming;\r\n            break;\r\n            case 'Competing':\r\n            activityType = ActivityType.Competing;\r\n            break;\r\n            default:\r\n            activityType = ActivityType.Playing;\r\n            break;\r\n        }\r\n        if(!activityType) return;\r\n        disClient.user.setActivity(`${message}`, {type: activityType});\r\n    }\r\n};","import { app, BrowserWindow, shell, ipcMain } from 'electron'\r\nimport { release } from 'node:os'\r\nimport { join } from 'node:path'\r\nimport { update } from './update'\r\nimport { DiscordJSRoutes } from './discord'\r\nimport { PouchDBRoutes } from './pouchdb'\r\n\r\n// The built directory structure\r\n//\r\n// ├─┬ dist-electron\r\n// │ ├─┬ main\r\n// │ │ └── index.js    > Electron-Main\r\n// │ └─┬ preload\r\n// │   └── index.js    > Preload-Scripts\r\n// ├─┬ dist\r\n// │ └── index.html    > Electron-Renderer\r\n//\r\nprocess.env.DIST_ELECTRON = join(__dirname, '../')\r\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist')\r\nprocess.env.VITE_PUBLIC = process.env.VITE_DEV_SERVER_URL\r\n  ? join(process.env.DIST_ELECTRON, '../public')\r\n  : process.env.DIST\r\n\r\n// Disable GPU Acceleration for Windows 7\r\nif (release().startsWith('6.1')) app.disableHardwareAcceleration()\r\n\r\n// Set application name for Windows 10+ notifications\r\nif (process.platform === 'win32') app.setAppUserModelId(app.getName())\r\n\r\nif (!app.requestSingleInstanceLock()) {\r\n  app.quit()\r\n  process.exit(0)\r\n}\r\n\r\n// Remove electron security warnings\r\n// This warning only shows in development mode\r\n// Read more on https://www.electronjs.org/docs/latest/tutorial/security\r\nprocess.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\r\n\r\nlet win: BrowserWindow | null = null\r\n// Here, you can also use other preload\r\nconst preload = join(__dirname, '../preload/index.js')\r\nconst url = process.env.VITE_DEV_SERVER_URL\r\nconst indexHtml = join(process.env.DIST, 'index.html')\r\n\r\nasync function createWindow() {\r\n  win = new BrowserWindow({\r\n    title: 'Main window',\r\n    icon: join(process.env.VITE_PUBLIC, 'favicon.ico'),\r\n    webPreferences: {\r\n      preload,\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n      webSecurity: false,\r\n    },\r\n    fullscreenable: true,\r\n    frame: true,\r\n    transparent: false,\r\n    autoHideMenuBar: true,\r\n    resizable: true,\r\n    maximizable: true,\r\n    minimizable: false,\r\n  })\r\n\r\n  if (url) { // electron-vite-vue#298\r\n    win.loadURL(url)\r\n    // Open devTool if the app is not packaged\r\n    win.webContents.openDevTools()\r\n  } else {\r\n    win.loadFile(indexHtml)\r\n  }\r\n\r\n  // Test actively push message to the Electron-Renderer\r\n  win.webContents.on('did-finish-load', () => {\r\n    win?.webContents.send('main-process-message', new Date().toLocaleString())\r\n  })\r\n\r\n  // Make all links open with the browser, not with the application\r\n  win.webContents.setWindowOpenHandler(({ url }) => {\r\n    if (url.startsWith('https:')) shell.openExternal(url)\r\n    return { action: 'deny' }\r\n  })\r\n\r\n  // Apply electron-updater\r\n  update(win)\r\n}\r\n\r\napp.whenReady().then(createWindow)\r\n\r\napp.on('window-all-closed', () => {\r\n  win = null\r\n  if (process.platform !== 'darwin') app.quit()\r\n})\r\n\r\napp.on('second-instance', () => {\r\n  if (win) {\r\n    // Focus on the main window if the user tried to open another\r\n    if (win.isMinimized()) win.restore()\r\n    win.focus()\r\n  }\r\n})\r\n\r\napp.on('activate', () => {\r\n  const allWindows = BrowserWindow.getAllWindows()\r\n  if (allWindows.length) {\r\n    allWindows[0].focus()\r\n  } else {\r\n    createWindow()\r\n  }\r\n})\r\n\r\n// New window example arg: new windows url\r\nipcMain.handle('open-win', (_, arg) => {\r\n  const childWindow = new BrowserWindow({\r\n    webPreferences: {\r\n      preload,\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n    },\r\n  })\r\n\r\n  if (process.env.VITE_DEV_SERVER_URL) {\r\n    childWindow.loadURL(`${url}#${arg}`)\r\n  } else {\r\n    childWindow.loadFile(indexHtml, { hash: arg })\r\n  }\r\n})\r\n\r\nDiscordJSRoutes();\r\nPouchDBRoutes();"],"names":["win","autoUpdater","app","ipcMain","GatewayIntentBits","Partials","Client","Collection","ActivityType","join","release","BrowserWindow","url","shell"],"mappings":"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"}